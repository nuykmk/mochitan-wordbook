// ÂçòË™û„É¢„Éº„ÉÄ„É´„ÅÆÂà∂Âæ°Áî®„Çπ„ÇØ„É™„Éó„Éà
// - ‰∏ÄË¶ß„Åß„Ç´„Éº„Éâ„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÅüÈöõ„Å´„É¢„Éº„ÉÄ„É´„ÇíÈñã„Åè
// - ÂçòË™ûË©≥Á¥∞ÊÉÖÂ†±ÔºàCSVÔºãJSONÔºâ„ÇíË™≠„ÅøËæº„Çì„Åß„É¢„Éº„ÉÄ„É´ÂÜÖ„Å´Â±ïÈñã
// - Èü≥Â£∞ÂÜçÁîü„ÄÅÂâçÂæå„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„ÄÅ„Çπ„ÉØ„Ç§„ÉóÂØæÂøú„Å™„Å©


document.addEventListener("DOMContentLoaded", () => {
  const modal = document.getElementById("wordModal");
  const titleEl = modal.querySelector(".word-modal__title-text");
  const pronEl = modal.querySelector(".word-modal__pronunciation-text");
  const meaningsEl = modal.querySelector(".word-modal__meanings");
  const imageEl = modal.querySelector(".word-modal__image");
  const exampleEnEl = modal.querySelector(".word-modal__example-en");
  const exampleJaEl = modal.querySelector(".word-modal__example-ja");
  const relatedEl = modal.querySelector(".word-modal__related");
  const usageEl = modal.querySelector(".word-modal__usage");
  const nuanceEl = modal.querySelector(".word-modal__nuance");
  const englishDefEl = modal.querySelector(".word-modal__english-def");
  const soundBtn = modal.querySelector(".word-modal__sound");
  const prevBtn = modal.querySelector(".word-modal__nav-btn");
  const nextBtn = modal.querySelector(".word-modal__nav-btn-right");

  const dictionaryPath = 'data/dictionary_new/';

  const posMap = {
    verb: "Âãï",
    noun: "Âêç",
    adjective: "ÂΩ¢",
    adverb: "ÂâØ",
    preposition: "Ââç",
    conjunction: "Êé•",
    interjection: "ÈñìÊäï",       
    pronoun: "‰ª£",
    auxiliary: "Âä©",            
    auxiliary_verb: "Âä©Âãï",     
    article: "ÂÜ†",
    phrase: "Âè•",
    idiom: "ÁÜü",
    number: "Êï∞",               
    ordinal_number: "Â∫èÊï∞"      
  };
  const posOrder = { verb: 1, noun: 2, adjective: 3 };

  function sortMeanings(meanings) {
    return meanings.sort((a, b) => {
      const orderA = posOrder[a.part_of_speech] || 99;
      const orderB = posOrder[b.part_of_speech] || 99;
      return orderA - orderB;
    });
  }

  window.openWordModal = async (word) => {
    const wordId = word.id;
    modal.dataset.currentId = wordId;

    try {
      const res = await fetch(`${dictionaryPath}${wordId}.json`);
      if (!res.ok) throw new Error("404 Not Found");
      const json = await res.json();

      // „Çø„Ç§„Éà„É´„Å®Áô∫Èü≥
      titleEl.textContent = word.english;
      pronEl.textContent = word.pronunciation || json.pronunciation || "";

      // ÊÑèÂë≥„Çª„ÇØ„Ç∑„Éß„É≥
      const mainMeaning = word.translation
        ? [{ translation: `<strong>${word.translation}</strong>`, part_of_speech: word.part_of_speech }]
        : [];
      const extra = (json.other_translations || []).map(m => ({
        translation: m.translation,
        part_of_speech: m.part_of_speech
      }));
      const combined = [...mainMeaning, ...extra];
      // const combined = sortMeanings(mainMeaning.concat(extra));
      // ‚úÖ TP-19: „É°„Ç§„É≥Ë®≥„ÅÆÂìÅË©û„ÇíÊúÄ‰∏ä‰Ωç„Å´„ÄÅÊÆã„Çä„ÅØÂìÅË©ûÂÑ™ÂÖàÈ†Ü‰Ωç„Å´Âæì„Å£„Å¶‰∏¶„Åπ„Çã
      // ‚úÖ ÂìÅË©ûÈ†Ü„ÅÆÂÑ™ÂÖàÂ∫¶
      const posOrder = { "Âãï": 1, "Âêç": 2, "ÂΩ¢": 3 };
      const mainPOS = word.part_of_speech || "";

      // ‚úÖ combined„Çígrouped„Å´„Åæ„Å®„ÇÅ„Çã
      const grouped = {};
      combined.forEach(m => {
        const pos = posMap[m.part_of_speech] || m.part_of_speech || "";
        if (!grouped[pos]) grouped[pos] = [];
        grouped[pos].push(m.translation);
        });

      // ‚úÖ ÂÑ™ÂÖàÈ†ÜÔºã„É°„Ç§„É≥ÂìÅË©û„Åß‰∏¶„Å≥Êõø„Åà
      const sortedGrouped = Object.entries(grouped).sort(([a], [b]) => {
        if (a === mainPOS) return -1;
        if (b === mainPOS) return 1;
        return (posOrder[a] || 999) - (posOrder[b] || 999);
      });

      // ‚úÖ Âá∫Âäõ
      meaningsEl.innerHTML = sortedGrouped
        .map(([pos, list]) => `<li><span class="word-card__part-of-speech">${pos}</span> ${list.join("„ÄÅ")}</li>`)
        .join("");
// const combined = [...mainMeaning, ...extra];
// const grouped = {};
// combined.forEach(m => {
//   const pos = m.part_of_speech || "";
//   if (!grouped[pos]) grouped[pos] = [];
//   grouped[pos].push(m.translation);
// });

// // ‚úÖ ‰∏¶„Å≥È†Ü„Çí„Äå„É°„Ç§„É≥ÂìÅË©û‚ÜíÂãï‚ÜíÂêç‚ÜíÂΩ¢„Äç„ÅÆÈ†Ü„Åß
// const posOrder = { verb: 1, noun: 2, adjective: 3 };
// const mainPOS = word.part_of_speech || "";
// const sortedGrouped = Object.entries(grouped).sort(([a], [b]) => {
//   if (a === mainPOS) return -1;
//   if (b === mainPOS) return 1;
//   return (posOrder[a] || 999) - (posOrder[b] || 999);
// });
//       // const grouped = {};
//       combined.forEach(m => {
//         const pos = posMap[m.part_of_speech] || m.part_of_speech || "";
//         if (!grouped[pos]) grouped[pos] = [];
//         grouped[pos].push(m.translation);
//       });
//       meaningsEl.innerHTML = Object.entries(grouped)
//         .map(([pos, list]) => `<li><span class="word-card__part-of-speech">${pos}</span> ${list.join("„ÄÅ")}</li>`)
//         .join("");

      // ÁîªÂÉè
      imageEl.src = `Img/${word.course}/${word.english}.jpg`;
      imageEl.alt = `${word.english}„ÅÆ„Ç§„É©„Çπ„Éà`;

      // ‰æãÊñá
      const example = (word.example || '').replace(/\|/g, '');
      const highlighted = example.replace(
        new RegExp(`\\b${word.english}\\b`, 'gi'),
        `<span class="highlight">$&</span>`
      );
      exampleEnEl.innerHTML = `
        ${highlighted}
        <button class="word-modal__example-sound word-modal__sound"
                data-audio="wordsound/${word.sound}_1.mp3"
                aria-label="‰æãÊñá„ÅÆÈü≥Â£∞ÂÜçÁîü">
          <img src="image/btn_sound.png" alt="Áô∫Èü≥ÂÜçÁîü">
        </button>`;
      exampleJaEl.textContent = word.example_translation || "";

      // ÂØæÁæ©Ë™û
      relatedEl.innerHTML = "";
      if ((json.antonyms || []).length > 0) {
        relatedEl.closest(".word-modal__section").style.display = "block";
        json.antonyms.forEach(a => {
          const jpPos = posMap[a.part_of_speech] || a.part_of_speech;
          relatedEl.innerHTML += `<p class="word-modal__related-item">‚ÜîÔ∏é(${jpPos}) ${a.english}Ôºö${a.translation}</p>`;
        });
      } else {
        relatedEl.closest(".word-modal__section").style.display = "none";
      }

      // ‰Ωø„ÅÑÊñπÔºàphrasesÔºâ- ‚úÖ p.english„ÅÆÂ≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØ‰ªò„Åç
      usageEl.innerHTML = "";
      if ((json.phrases || []).length > 0) {
        usageEl.closest(".word-modal__section").style.display = "block";
        json.phrases.forEach(p => {
          const raw = p.english || "";
          const en = raw.includes(`|${word.english}|`)
            ? raw.replace(new RegExp(`\\|${word.english}\\|`, 'g'), `<span class="highlight">${word.english}</span>`).replace(/\|/g, '')
            : raw;

          usageEl.innerHTML += `
            <li>
              <p class="word-modal__usage-en">${en}</p>
              <p class="word-modal__usage-ja">${p.translation}</p>
            </li>`;
        });
      } else {
        usageEl.closest(".word-modal__section").style.display = "none";
      }

      // „Éã„É•„Ç¢„É≥„Çπ
      if ((json.synonyms || []).length > 0 && json.synonyms[0]?.description) {
        nuanceEl.closest(".word-modal__section").style.display = "block";
        nuanceEl.textContent = json.synonyms[0].description;
      } else {
        nuanceEl.closest(".word-modal__section").style.display = "none";
      }

      // Ëã±Ëã±ÂÆöÁæ©
      englishDefEl.textContent = json.english_meaning || "";

      // Èü≥Â£∞„Éú„Çø„É≥
      soundBtn.setAttribute("data-audio", `wordsound/${word.sound}_1.mp3`);

      // ÂâçÂæå„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥
      const cards = [...document.querySelectorAll(".word-card")];
      const ids = cards.map(c => c.dataset.id);
      const currentIndex = ids.indexOf(wordId);
      const prevWord = window.wordDataArray?.find(w => w.id === ids[currentIndex - 1]);
      const nextWord = window.wordDataArray?.find(w => w.id === ids[currentIndex + 1]);
      prevBtn.innerHTML = prevWord ? `&lt; ${prevWord.english}` : "";
      nextBtn.innerHTML = nextWord ? `${nextWord.english} &gt;` : "";

      // „É¢„Éº„ÉÄ„É´Ë°®Á§∫
      modal.setAttribute("aria-hidden", "false");
      modal.classList.add("is-open");
      // ‚úÖ Ê§úÁ¥¢„É¢„Éº„Éâ„ÅÆ„Ç™„Éº„Éê„Éº„É¨„Ç§„Åå„ÅÇ„Çå„Å∞ÂâäÈô§
      // document.getElementById("search-overlay")?.remove();

    } catch (err) {
      console.error("‚ùå JSON Ë™≠„ÅøËæº„ÅøÂ§±Êïó:", err);
    }
  };

  // ÂâçÂæåÂàá„ÇäÊõø„Åà
  // function moveModal(direction) {
  //   const cards = [...document.querySelectorAll(".word-card")];
  //   const ids = cards.map(c => c.dataset.id);
  //   const currentId = modal.dataset.currentId;
  //   const currentIndex = ids.indexOf(currentId);
  //   const targetId = direction === "next" ? ids[currentIndex + 1] : ids[currentIndex - 1];
  //   if (!targetId) return;
  //   const targetWord = window.wordDataArray.find(w => w.id === targetId);
  //   if (targetWord) window.openWordModal(targetWord);
  // }
  // ‚úÖ ÂâçÂæåÂàá„ÇäÊõø„ÅàÔºà„Ç∞„É¨„Éº„Ç¢„Ç¶„ÉàÊºîÂá∫‰ªò„ÅçÔºâ
function moveModal(direction) {
  const fadeLayer = document.querySelector(".word-modal__fade-layer");
  if (fadeLayer) {
    fadeLayer.classList.add("is-active"); // ‚Üê „Ç∞„É¨„Éº„Ç¢„Ç¶„ÉàÈñãÂßã
  }

  const cards = [...document.querySelectorAll(".word-card")];
  const ids = cards.map(c => c.dataset.id);
  const currentId = modal.dataset.currentId;
  const currentIndex = ids.indexOf(currentId);
  const targetId = direction === "next" ? ids[currentIndex + 1] : ids[currentIndex - 1];
  if (!targetId) return;

  const targetWord = window.wordDataArray.find(w => w.id === targetId);
  if (targetWord) {
    setTimeout(() => {
      window.openWordModal(targetWord);

      // üåü „Ç®„Éï„Çß„ÇØ„ÉàËß£Èô§Ôºà300msÂæåÔºâ
      if (fadeLayer) {
        fadeLayer.classList.remove("is-active");
      }
    }, 300);
  }
}

  prevBtn.addEventListener("click", () => moveModal("prev"));
  nextBtn.addEventListener("click", () => moveModal("next"));

  // „Çπ„ÉØ„Ç§„Éó
  let touchStartX = 0;
  let touchEndX = 0;

  modal.addEventListener("touchstart", (e) => {
    touchStartX = e.changedTouches[0].screenX;
  });

  modal.addEventListener("touchend", (e) => {
    touchEndX = e.changedTouches[0].screenX;
    const diff = touchEndX - touchStartX;
    if (Math.abs(diff) > 50) {
      if (diff > 0) moveModal("prev");
      else moveModal("next");
    }
  });

  // Èü≥Â£∞ÂÜçÁîü
  document.addEventListener("click", (e) => {
    const btn = e.target.closest(".word-modal__sound");
    if (!btn) return;
    const audioSrc = btn.getAttribute("data-audio");
    if (!audioSrc) return;
    const audio = new Audio(audioSrc);
    audio.play().catch(err => console.error("üîà ÂÜçÁîü„Ç®„É©„Éº:", err));
  });
});